#!/bin/bash

# Script de diagnostic des performances du MCP Hub Central
# Usage: ./diagnose_hub_performance.sh

echo "‚ö° Diagnostic des performances du MCP Hub Central"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[PERF]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úÖ SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[‚ö†Ô∏è WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚ùå ERROR]${NC} $1"
}

HUB_URL="https://mcp.coupaul.fr"
SUPABASE_URL="https://supabase.mcp.coupaul.fr"
MINECRAFT_URL="https://minecraft.mcp.coupaul.fr"

print_status "=== DIAGNOSTIC DES PERFORMANCES MCP HUB CENTRAL ==="
print_status "Hub Central: $HUB_URL"
print_status "Serveur Supabase: $SUPABASE_URL"
print_status "Serveur Minecraft: $MINECRAFT_URL"

echo ""
print_status "=== 1. TEST DE PERFORMANCE DU HUB CENTRAL ==="

# Test de performance du hub central
print_status "Test de performance du hub central..."
hub_perf=$(curl -w "@-" -o /dev/null -s "$HUB_URL/" <<< "time_namelookup:  %{time_namelookup}\ntime_connect:     %{time_connect}\ntime_appconnect:  %{time_appconnect}\ntime_pretransfer: %{time_pretransfer}\ntime_redirect:    %{time_redirect}\ntime_starttransfer: %{time_starttransfer}\ntime_total:       %{time_total}\n")

echo "$hub_perf"

# Analyser les temps
time_total=$(echo "$hub_perf" | grep "time_total:" | awk '{print $2}')
time_starttransfer=$(echo "$hub_perf" | grep "time_starttransfer:" | awk '{print $2}')
time_connect=$(echo "$hub_perf" | grep "time_connect:" | awk '{print $2}')

print_status "Analyse des temps de r√©ponse:"
print_status "Temps total: ${time_total}s"
print_status "Temps jusqu'au premier byte: ${time_starttransfer}s"
print_status "Temps de connexion: ${time_connect}s"

# √âvaluer les performances
if (( $(echo "$time_total < 1.0" | bc -l) )); then
    print_success "Performance excellente (< 1s)"
elif (( $(echo "$time_total < 3.0" | bc -l) )); then
    print_warning "Performance acceptable (1-3s)"
elif (( $(echo "$time_total < 5.0" | bc -l) )); then
    print_warning "Performance lente (3-5s)"
else
    print_error "Performance tr√®s lente (> 5s)"
fi

echo ""
print_status "=== 2. TEST DE PERFORMANCE DES SERVEURS INDIVIDUELS ==="

# Test du serveur Supabase
print_status "Test de performance du serveur Supabase..."
supabase_perf=$(curl -w "@-" -o /dev/null -s "$SUPABASE_URL/health" <<< "time_namelookup:  %{time_namelookup}\ntime_connect:     %{time_connect}\ntime_appconnect:  %{time_appconnect}\ntime_pretransfer: %{time_pretransfer}\ntime_redirect:    %{time_redirect}\ntime_starttransfer: %{time_starttransfer}\ntime_total:       %{time_total}\n")

echo "$supabase_perf"

# Test du serveur Minecraft
print_status "Test de performance du serveur Minecraft..."
minecraft_perf=$(curl -w "@-" -o /dev/null -s "$MINECRAFT_URL/health" <<< "time_namelookup:  %{time_namelookup}\ntime_connect:     %{time_connect}\ntime_appconnect:  %{time_appconnect}\ntime_pretransfer: %{time_pretransfer}\ntime_redirect:    %{time_redirect}\ntime_starttransfer: %{time_starttransfer}\ntime_total:       %{time_total}\n")

echo "$minecraft_perf"

echo ""
print_status "=== 3. TEST DES ENDPOINTS SP√âCIFIQUES ==="

# Test des endpoints sp√©cifiques
endpoints=("/health" "/api/servers" "/api/tools")

for endpoint in "${endpoints[@]}"; do
    print_status "Test de performance $endpoint..."
    perf=$(curl -w "@-" -o /dev/null -s "$HUB_URL$endpoint" <<< "time_total: %{time_total}\n")
    time_total=$(echo "$perf" | grep "time_total:" | awk '{print $2}')
    print_status "Temps: ${time_total}s"
    
    if (( $(echo "$time_total < 1.0" | bc -l) )); then
        print_success "$endpoint: Rapide (< 1s)"
    elif (( $(echo "$time_total < 3.0" | bc -l) )); then
        print_warning "$endpoint: Lent (1-3s)"
    else
        print_error "$endpoint: Tr√®s lent (> 3s)"
    fi
done

echo ""
print_status "=== 4. ANALYSE DES CAUSES POSSIBLES ==="

print_status "Causes possibles de la lenteur:"

print_warning "1. üîÑ Probl√®me de d√©couverte des serveurs"
print_status "   - Le hub central essaie de d√©couvrir les serveurs √† chaque requ√™te"
print_status "   - Timeout trop long sur les serveurs Minecraft"
print_status "   - Tentatives de connexion multiples"

print_warning "2. üêå Serveur surcharg√©"
print_status "   - Railway avec ressources limit√©es"
print_status "   - Trop de requ√™tes simultan√©es"
print_status "   - M√©moire insuffisante"

print_warning "3. üåê Probl√®me r√©seau"
print_status "   - Latence √©lev√©e"
print_status "   - Connexions lentes"
print_status "   - Probl√®me DNS"

print_warning "4. ‚öôÔ∏è Configuration inefficace"
print_status "   - Pas de cache"
print_status "   - Requ√™tes synchrones"
print_status "   - Pas d'optimisation"

print_warning "5. üîç Logique de d√©couverte lente"
print_status "   - D√©couverte des serveurs √† chaque requ√™te"
print_status "   - Pas de cache des r√©sultats"
print_status "   - Timeout trop long"

echo ""
print_status "=== 5. SOLUTIONS RECOMMAND√âES ==="

print_status "1. üéØ SOLUTION IMM√âDIATE: Optimiser la d√©couverte des serveurs"
print_status "   - Mettre en cache les r√©sultats de d√©couverte"
print_status "   - R√©duire la fr√©quence des health checks"
print_status "   - Utiliser des timeouts plus courts"

print_status "2. üîß SOLUTION TECHNIQUE: Am√©liorer les performances"
print_status "   - Ajouter un cache Redis"
print_status "   - Optimiser les requ√™tes"
print_status "   - Utiliser des connexions asynchrones"

print_status "3. ‚öôÔ∏è SOLUTION CONFIGURATION: Ajuster les param√®tres"
print_status "   - R√©duire le health_check_interval"
print_status "   - Optimiser les timeouts"
print_status "   - D√©sactiver la d√©couverte automatique"

print_status "4. üöÄ SOLUTION INFRASTRUCTURE: Am√©liorer Railway"
print_status "   - Upgrader le plan Railway"
print_status "   - Augmenter les ressources"
print_status "   - Optimiser la configuration"

echo ""
print_status "=== 6. ACTIONS IMM√âDIATES ==="

print_status "Pour am√©liorer les performances imm√©diatement:"

print_status "1. Modifier la configuration pour r√©duire les timeouts:"
print_status "   - health_check_interval: 30s -> 60s"
print_status "   - timeout: 30s -> 10s"
print_status "   - retry_attempts: 3 -> 1"

print_status "2. Ajouter un cache simple:"
print_status "   - Cache les r√©sultats de d√©couverte pendant 5 minutes"
print_status "   - √âviter les requ√™tes r√©p√©t√©es"

print_status "3. Optimiser la logique de d√©couverte:"
print_status "   - D√©couverte en arri√®re-plan"
print_status "   - Pas de d√©couverte sur chaque requ√™te"

echo ""
print_status "=== 7. COMMANDES DE MONITORING ==="

print_status "Surveiller les performances:"
print_status "curl -w '@-' -o /dev/null -s '$HUB_URL/' <<< 'time_total: %{time_total}\n'"
print_status "curl -w '@-' -o /dev/null -s '$HUB_URL/api/servers' <<< 'time_total: %{time_total}\n'"
print_status "curl -w '@-' -o /dev/null -s '$HUB_URL/api/tools' <<< 'time_total: %{time_total}\n'"

echo ""
print_status "=== 8. R√âSUM√â ==="

print_status "Probl√®me identifi√©:"
print_error "Le MCP Hub Central est tr√®s lent √† charger (> 6 secondes)"

print_status "Causes principales:"
print_warning "1. D√©couverte des serveurs √† chaque requ√™te"
print_warning "2. Timeout trop long sur le serveur Minecraft"
print_warning "3. Pas de cache des r√©sultats"
print_warning "4. Ressources Railway limit√©es"

print_status "Solutions prioritaires:"
print_status "1. Ajouter un cache des r√©sultats de d√©couverte"
print_status "2. R√©duire les timeouts et intervalles"
print_status "3. Optimiser la logique de d√©couverte"
print_status "4. Consid√©rer un upgrade Railway"

echo ""
print_error "üö® CONCLUSION: Le MCP Hub Central est tr√®s lent"
print_status "‚úÖ SOLUTION: Optimiser la d√©couverte des serveurs et ajouter un cache"
print_status "Les serveurs individuels sont plus rapides que le hub central !"

exit 0
