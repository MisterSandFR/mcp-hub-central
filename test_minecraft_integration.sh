#!/bin/bash

# Script de test d'int√©gration pour le serveur Minecraft MCPC+ 1.6.4
# Usage: ./test_minecraft_integration.sh

echo "üéÆ Test d'int√©gration du serveur Minecraft MCPC+ 1.6.4 avec le hub central"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[TEST]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úÖ SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[‚ö†Ô∏è WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚ùå ERROR]${NC} $1"
}

MINECRAFT_URL="https://minecraft.mcp.coupaul.fr"
HUB_URL="https://mcp.coupaul.fr"

print_status "=== TEST D'INT√âGRATION MINECRAFT MCPC+ 1.6.4 ==="
print_status "Serveur Minecraft: $MINECRAFT_URL"
print_status "Hub Central: $HUB_URL"

echo ""
print_status "=== 1. TEST DU SERVEUR MINECRAFT ==="

# Test du health check
print_status "Test du health check..."
health_response=$(curl -s --connect-timeout 10 "$MINECRAFT_URL/health" 2>/dev/null)
if echo "$health_response" | grep -q '"status":"healthy"'; then
    print_success "Health check: OK"
    echo "R√©ponse: $health_response"
else
    print_error "Health check: √âCHEC"
    echo "R√©ponse: $health_response"
fi

# Test de l'API des outils
print_status "Test de l'API des outils..."
tools_response=$(curl -s --connect-timeout 10 "$MINECRAFT_URL/api/tools" 2>/dev/null)
if echo "$tools_response" | grep -q '"success":true'; then
    print_success "API des outils: OK"
    tools_count=$(echo "$tools_response" | grep -o '"name":' | wc -l)
    print_status "Nombre d'outils d√©tect√©s: $tools_count"
else
    print_error "API des outils: √âCHEC"
fi

# Test de la configuration MCP
print_status "Test de la configuration MCP..."
config_response=$(curl -s --connect-timeout 10 "$MINECRAFT_URL/.well-known/mcp-config" 2>/dev/null)
if echo "$config_response" | grep -q '"name":"mcp-minecraft-mcpc-1.6.4"'; then
    print_success "Configuration MCP: OK"
    echo "Nom du serveur: $(echo "$config_response" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)"
    echo "Version: $(echo "$config_response" | grep -o '"version":"[^"]*"' | cut -d'"' -f4)"
else
    print_error "Configuration MCP: √âCHEC"
fi

echo ""
print_status "=== 2. TEST DU HUB CENTRAL ==="

# Test de la d√©tection des serveurs
print_status "Test de la d√©tection des serveurs..."
servers_response=$(curl -s --connect-timeout 10 "$HUB_URL/api/servers" 2>/dev/null)
if echo "$servers_response" | grep -q '"name"'; then
    print_success "API des serveurs: OK"
    servers_count=$(echo "$servers_response" | grep -o '"name":' | wc -l)
    print_status "Nombre de serveurs d√©tect√©s: $servers_count"
    
    # V√©rifier si Minecraft est d√©tect√©
    if echo "$servers_response" | grep -q "minecraft\|Minecraft\|MCPC"; then
        print_success "Serveur Minecraft d√©tect√© par le hub central"
    else
        print_warning "Serveur Minecraft NON d√©tect√© par le hub central"
        print_status "Serveurs d√©tect√©s:"
        echo "$servers_response" | grep -o '"name":"[^"]*"' | cut -d'"' -f4
    fi
else
    print_error "API des serveurs: √âCHEC"
fi

# Test de la liste des outils
print_status "Test de la liste des outils..."
tools_hub_response=$(curl -s --connect-timeout 10 "$HUB_URL/api/tools" 2>/dev/null)
if echo "$tools_hub_response" | grep -q '"name"'; then
    print_success "API des outils du hub: OK"
    tools_hub_count=$(echo "$tools_hub_response" | grep -o '"name":' | wc -l)
    print_status "Nombre total d'outils dans le hub: $tools_hub_count"
    
    # V√©rifier si les outils Minecraft sont pr√©sents
    if echo "$tools_hub_response" | grep -q "minecraft\|Minecraft\|MCPC\|analyze_gui_spritesheet"; then
        print_success "Outils Minecraft d√©tect√©s dans le hub central"
    else
        print_warning "Outils Minecraft NON d√©tect√©s dans le hub central"
    fi
else
    print_error "API des outils du hub: √âCHEC"
fi

echo ""
print_status "=== 3. R√âSUM√â DE L'INT√âGRATION ==="

# V√©rifier l'√©tat global
minecraft_working=false
hub_detecting_minecraft=false

if echo "$health_response" | grep -q '"status":"healthy"'; then
    minecraft_working=true
fi

if echo "$servers_response" | grep -q "minecraft\|Minecraft\|MCPC"; then
    hub_detecting_minecraft=true
fi

if [ "$minecraft_working" = true ] && [ "$hub_detecting_minecraft" = true ]; then
    print_success "üéâ INT√âGRATION COMPL√àTE R√âUSSIE !"
    print_success "‚úÖ Serveur Minecraft MCPC+ 1.6.4 op√©rationnel"
    print_success "‚úÖ Hub central d√©tecte le serveur Minecraft"
    print_success "‚úÖ Outils Minecraft disponibles dans le hub"
    
elif [ "$minecraft_working" = true ] && [ "$hub_detecting_minecraft" = false ]; then
    print_warning "‚ö†Ô∏è SERVEUR OP√âRATIONNEL MAIS NON D√âTECT√â"
    print_success "‚úÖ Serveur Minecraft MCPC+ 1.6.4 op√©rationnel"
    print_warning "‚ö†Ô∏è Hub central ne d√©tecte pas le serveur Minecraft"
    print_status "Action requise: Mettre √† jour la configuration du hub central"
    
elif [ "$minecraft_working" = false ]; then
    print_error "‚ùå SERVEUR NON OP√âRATIONNEL"
    print_error "‚ùå Serveur Minecraft MCPC+ 1.6.4 non accessible"
    print_status "Action requise: V√©rifier le d√©ploiement Railway"
fi

echo ""
print_status "=== 4. ACTIONS RECOMMAND√âES ==="

if [ "$minecraft_working" = true ] && [ "$hub_detecting_minecraft" = false ]; then
    print_status "Pour int√©grer le serveur Minecraft au hub central:"
    print_status "1. V√©rifier la configuration du hub central"
    print_status "2. Forcer la d√©couverte des serveurs"
    print_status "3. Red√©marrer le hub central si n√©cessaire"
    print_status "4. V√©rifier que la configuration inclut le serveur Minecraft"
fi

echo ""
print_status "=== 5. COMMANDES UTILES ==="
print_status "Test manuel du serveur: curl -s $MINECRAFT_URL/health"
print_status "Test manuel du hub: curl -s $HUB_URL/api/servers"
print_status "Interface Minecraft: $MINECRAFT_URL"
print_status "Hub central: $HUB_URL"

exit 0
