#!/bin/bash

# Script de dÃ©marrage pour MCP Hub Central - Mode Standalone
# Usage: ./start_standalone.sh

echo "ðŸš€ DÃ©marrage du MCP Hub Central - Mode Standalone..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# VÃ©rifier si Python est installÃ©
if ! command -v py &> /dev/null; then
    print_error "Python n'est pas installÃ© ou n'est pas dans le PATH"
    print_status "Installez Python depuis https://www.python.org/downloads/"
    exit 1
fi

print_success "Python trouvÃ©: $(py --version)"

# VÃ©rifier si le fichier standalone existe
if [ ! -f "mcp_hub_standalone.py" ]; then
    print_error "Fichier mcp_hub_standalone.py introuvable"
    exit 1
fi

print_status "DÃ©marrage du MCP Hub Central en mode standalone..."

# DÃ©marrer le serveur
py mcp_hub_standalone.py &

# Attendre que le serveur dÃ©marre
sleep 3

# VÃ©rifier si le serveur est en cours d'exÃ©cution
if pgrep -f "mcp_hub_standalone.py" > /dev/null; then
    print_success "MCP Hub Central - Standalone Mode dÃ©marrÃ© avec succÃ¨s !"
    
    # Tester la connectivitÃ©
    print_status "Test de connectivitÃ©..."
    
    if curl -s --connect-timeout 5 "http://localhost:8000/health" > /dev/null; then
        print_success "Serveur accessible sur http://localhost:8000"
    else
        print_warning "Serveur non accessible sur http://localhost:8000"
    fi
    
    if curl -s --connect-timeout 5 "http://localhost:8000/api/servers" > /dev/null; then
        print_success "API des serveurs accessible"
    else
        print_warning "API des serveurs non accessible"
    fi
    
    if curl -s --connect-timeout 5 "http://localhost:8000/api/tools" > /dev/null; then
        print_success "API des outils accessible"
    else
        print_warning "API des outils non accessible"
    fi
    
    echo ""
    print_status "=== RÃ‰SUMÃ‰ ==="
    print_success "ðŸŽ‰ MCP Hub Central - Standalone Mode opÃ©rationnel !"
    print_status "âœ… 2 serveurs MCP simulÃ©s (Supabase + Minecraft)"
    print_status "âœ… 59 outils MCP intÃ©grÃ©s"
    print_status "âœ… Mode standalone (pas de Docker requis)"
    
    echo ""
    print_status "=== ACCÃˆS ==="
    print_status "Interface web: http://localhost:8000"
    print_status "Interface publique: https://mcp.coupaul.fr"
    print_status "API Health: http://localhost:8000/health"
    print_status "API Servers: http://localhost:8000/api/servers"
    print_status "API Tools: http://localhost:8000/api/tools"
    print_status "MCP Endpoint: http://localhost:8000/mcp"
    
    echo ""
    print_status "=== COMMANDES UTILES ==="
    print_status "ArrÃªter le serveur: pkill -f mcp_hub_standalone.py"
    print_status "Voir les logs: tail -f /dev/null (pas de logs en mode standalone)"
    print_status "RedÃ©marrer: ./start_standalone.sh"
    
else
    print_error "Ã‰chec du dÃ©marrage du MCP Hub Central"
    print_status "VÃ©rifiez les erreurs ci-dessus"
    exit 1
fi
