#!/bin/bash

# Script de diagnostic de la configuration Railway
# Usage: ./diagnose_railway_config.sh

echo "üîç Diagnostic de la configuration Railway"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[DIAG]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úÖ SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[‚ö†Ô∏è WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚ùå ERROR]${NC} $1"
}

print_status "=== DIAGNOSTIC DE LA CONFIGURATION RAILWAY ==="

echo ""
print_status "=== 1. V√âRIFICATION DE LA CONFIGURATION D√âPLOY√âE ==="

# V√©rifier la configuration d√©ploy√©e
print_status "Configuration actuelle sur Railway:"
config_deployed=$(curl -s --max-time 10 "https://mcp.coupaul.fr/api/servers" 2>/dev/null)

if [ -n "$config_deployed" ]; then
    echo "$config_deployed" | jq '.' 2>/dev/null || echo "$config_deployed"
    
    # V√©rifier la version
    version_deployed=$(echo "$config_deployed" | grep -o '"version":"[^"]*"' | head -1 | cut -d'"' -f4)
    if [ -n "$version_deployed" ]; then
        print_status "Version d√©ploy√©e: $version_deployed"
        if [ "$version_deployed" = "3.5.0" ]; then
            print_success "‚úÖ Version √† jour (3.5.0)"
        else
            print_error "‚ùå Version obsol√®te ($version_deployed)"
        fi
    fi
    
    # V√©rifier le serveur Minecraft
    if echo "$config_deployed" | grep -q "minecraft"; then
        print_success "‚úÖ Serveur Minecraft d√©tect√©"
    else
        print_error "‚ùå Serveur Minecraft non d√©tect√©"
    fi
    
    # V√©rifier les domaines internes
    if echo "$config_deployed" | grep -q "railway.internal"; then
        print_success "‚úÖ Domaines internes Railway d√©tect√©s"
    else
        print_error "‚ùå Domaines internes Railway non d√©tect√©s"
    fi
else
    print_error "‚ùå Impossible de r√©cup√©rer la configuration"
fi

echo ""
print_status "=== 2. V√âRIFICATION DE LA CONFIGURATION LOCALE ==="

# V√©rifier la configuration locale
print_status "Configuration locale:"
if [ -f "mcp_servers_config.json" ]; then
    print_success "‚úÖ Fichier mcp_servers_config.json pr√©sent"
    
    # V√©rifier la version locale
    local_version=$(grep -o '"version":"[^"]*"' mcp_servers_config.json | head -1 | cut -d'"' -f4)
    if [ -n "$local_version" ]; then
        print_status "Version locale: $local_version"
        if [ "$local_version" = "3.5.0" ]; then
            print_success "‚úÖ Version locale √† jour (3.5.0)"
        else
            print_error "‚ùå Version locale obsol√®te ($local_version)"
        fi
    fi
    
    # V√©rifier les domaines internes locaux
    if grep -q "railway.internal" mcp_servers_config.json; then
        print_success "‚úÖ Domaines internes Railway configur√©s localement"
    else
        print_error "‚ùå Domaines internes Railway non configur√©s localement"
    fi
else
    print_error "‚ùå Fichier mcp_servers_config.json absent"
fi

echo ""
print_status "=== 3. ANALYSE DU PROBL√àME ==="

print_status "Probl√®me identifi√©:"
print_error "Railway n'utilise pas le fichier mcp_servers_config.json"

print_status "Causes possibles:"
print_warning "1. üîÑ Railway ne lit pas le fichier de configuration"
print_status "   - Le code Python ne charge pas le fichier JSON"
print_status "   - Configuration hardcod√©e dans le code"

print_warning "2. üêå Cache Railway persistant"
print_status "   - Railway utilise un cache de configuration"
print_status "   - Cache non invalid√© malgr√© les changements"

print_warning "3. ‚öôÔ∏è Configuration Railway incorrecte"
print_status "   - Variables d'environnement Railway"
print_status "   - Configuration Railway non mise √† jour"

print_warning "4. üîç Probl√®me de build Railway"
print_status "   - Erreur de build sur Railway"
print_status "   - Fichier JSON non inclus dans le build"

echo ""
print_status "=== 4. SOLUTIONS ==="

print_status "Solutions pour r√©soudre le probl√®me:"

print_status "1. üéØ SOLUTION IMM√âDIATE: V√©rifier le code Python"
print_status "   - Le code Python doit charger mcp_servers_config.json"
print_status "   - V√©rifier que le fichier est lu correctement"

print_status "2. üîß SOLUTION TECHNIQUE: Variables d'environnement"
print_status "   - Utiliser des variables d'environnement Railway"
print_status "   - Configuration via Railway Dashboard"

print_status "3. ‚öôÔ∏è SOLUTION CONFIGURATION: Hardcoder la configuration"
print_status "   - Int√©grer la configuration directement dans le code Python"
print_status "   - √âviter la d√©pendance au fichier JSON"

print_status "4. üöÄ SOLUTION INFRASTRUCTURE: Nouveau d√©ploiement"
print_status "   - Cr√©er un nouveau projet Railway"
print_status "   - Red√©ployer depuis z√©ro"

echo ""
print_status "=== 5. V√âRIFICATION DU CODE PYTHON ==="

print_status "V√©rification du code Python..."

if [ -f "mcp_hub_central.py" ]; then
    print_success "‚úÖ Fichier mcp_hub_central.py pr√©sent"
    
    # V√©rifier si le code charge le fichier JSON
    if grep -q "mcp_servers_config.json" mcp_hub_central.py; then
        print_success "‚úÖ Code Python r√©f√©rence mcp_servers_config.json"
    else
        print_error "‚ùå Code Python ne r√©f√©rence pas mcp_servers_config.json"
    fi
    
    # V√©rifier la m√©thode de chargement
    if grep -q "load_servers_config" mcp_hub_central.py; then
        print_success "‚úÖ M√©thode load_servers_config pr√©sente"
    else
        print_error "‚ùå M√©thode load_servers_config absente"
    fi
else
    print_error "‚ùå Fichier mcp_hub_central.py absent"
fi

echo ""
print_status "=== 6. ACTIONS IMM√âDIATES ==="

print_status "Actions √† effectuer maintenant:"

print_status "1. üîç V√©rifier le code Python:"
print_status "   - S'assurer que mcp_servers_config.json est charg√©"
print_status "   - V√©rifier la m√©thode load_servers_config"

print_status "2. üîÑ Red√©ployer Railway:"
print_status "   - Aller sur Railway Dashboard"
print_status "   - Cliquer sur 'Redeploy'"
print_status "   - Attendre 2-3 minutes"

print_status "3. üîß V√©rifier les variables d'environnement:"
print_status "   - Aller sur Railway Dashboard"
print_status "   - V√©rifier les variables d'environnement"
print_status "   - S'assurer qu'elles sont √† jour"

echo ""
print_status "=== 7. COMMANDES DE V√âRIFICATION ==="

print_status "V√©rifier la configuration d√©ploy√©e:"
print_status "curl -s 'https://mcp.coupaul.fr/api/servers' | jq '.hub.version'"

print_status "V√©rifier les serveurs:"
print_status "curl -s 'https://mcp.coupaul.fr/api/servers' | jq '.servers[] | {id, host, port, protocol}'"

print_status "V√©rifier les performances:"
print_status "curl -w '@-' -o /dev/null -s 'https://mcp.coupaul.fr/' <<< 'time_total: %{time_total}\n'"

echo ""
print_status "=== 8. R√âSUM√â ==="

print_status "Probl√®me identifi√©:"
print_error "‚ùå Railway n'utilise pas le fichier mcp_servers_config.json"

print_status "Cause principale:"
print_warning "Le code Python ne charge pas correctement le fichier JSON"

print_status "Solution:"
print_status "1. V√©rifier le code Python"
print_status "2. Red√©ployer Railway"
print_status "3. V√©rifier les variables d'environnement"

echo ""
print_error "üö® CONCLUSION: Configuration Railway non mise √† jour"
print_status "‚úÖ SOLUTION: V√©rifier le code Python et red√©ployer Railway"

exit 0
